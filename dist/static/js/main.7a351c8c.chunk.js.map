{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/courseInformation/SignedIn/CourseSummary.js","components/courseInformation/SignedIn/CourseList.js","components/courseInformation/SignedIn/AllCourses.js","components/dashboard/Dashboard.js","components/assignments/NewAssignment.js","store/actions/courseActions.js","components/courseInformation/SignedIn/CourseDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/courseInformation/SignedIn/NewCourse.js","components/dashboard/SignedOutDashboard.js","components/courseInformation/SignedOut/SignedOutCourseDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/courseReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","firstName","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","CourseSummary","_ref","course","title","content","professor","moment","createdAt","toDate","format","description","CourseList","courses","Link","map","id","key","data","SignedIn_CourseSummary","AllCourses","Dashboard","this","SignedIn_AllCourses","SignedIn_CourseList","Component","compose","firestore","ordered","firestoreConnect","collection","NewAssignment","courseId","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","createAssignment","_this$props","courseTitle","onSubmit","htmlFor","onChange","assignment","userId","getFirestore","P0n8lnKrSoqdThDAdYBk","ownProps","match","params","titles","assignments","i","rating","assignments_NewAssignment","SignIn","email","password","signIn","authError","Redirect","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","lastName","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","doc","user","set","initials","NewCourse","createCourse","history","push","authorId","add","objectSpread","Date","SignedOutDashboard","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","CourseDetails","SignedOutCourseDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","courseReducer","correctClass","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a351c8c.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"center\">\n      <NavLink to=\"/dashboard\" className=\"brand-logo\">\n        {\" \"}\n        UW Rate 'em!{\" \"}\n      </NavLink>\n      {/* <li>\n        <NavLink to=\"/signin\">Log Out</NavLink>\n      </li> */}\n      <li>\n        <NavLink to=\"/\">\n          <div onClick={props.signOut}>Log Out</div>{\" \"}\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/dashboard\" className=\"btn btn-primary black lighten-1\">\n          {props.profile.firstName}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"center\">\n      {\" \"}\n      <NavLink to=\"/\" className=\"brand-logo\">\n        {\" \"}\n        UW Rate 'em!{\" \"}\n      </NavLink>\n      {/* <li>\n        <NavLink to=\"/\">View Courses</NavLink>{\" \"}\n      </li> */}\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>{\" \"}\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>{\" \"}\n      </li>\n      {/* <li>\n        <NavLink to=\"/\">\n          <a onClick={props.signIn}>Login</a>{\" \"}\n        </NavLink>\n      </li> */}\n    </ul>\n  );\n};\n\n// export so we can use it in app.js (it will be used all the time in app.js)\nexport default SignedOutLinks;\n","import React from \"react\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper red darken-3\">\n      <div className=\"container\">\n        {links}\n        {/* <SignedInLinks />\n        <SignedOutLinks /> */}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n//\n// Purpose is for a preview when course is listed on homepage\n//\n\nconst CourseSummary = ({ course }) => {\n  // return some jsx\n  return (\n    <div className=\"card z-depth-0 course-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{course.title}</span>\n        <p>{course.content}</p>\n        <div className=\"grey-text\">\n          Instructor: {course.professor}\n          <p className=\"grey-text\">\n            Year Enrolled: {moment(course.createdAt.toDate()).format(\"YYYY\")}\n          </p>\n        </div>\n        <p />\n        {/* <Link to=\"/\">Add course description</Link> */}\n        <p>{course.description}</p>\n        <p />\n      </div>\n    </div>\n  );\n};\n\nexport default CourseSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CourseSummary from \"./CourseSummary\";\n\n//\n// Purpose is to list USERS course summaries on the homepage\n//\n\nconst CourseList = ({ courses }) => {\n  return (\n    <div className=\"course-list section\">\n      <h5 className=\"card-title\">My Courses</h5>\n      <div className=\"card-action\">\n        <p>\n          <Link to=\"/addcourse\">Add a course</Link>{\" \"}\n        </p>\n      </div>\n      {courses &&\n        courses.map(course => {\n          return (\n            // output some jsx for each individual course\n            <Link to={\"/course/\" + course.id} key={course.id} data={course.id}>\n              <CourseSummary course={course} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default CourseList;\n","import React from \"react\";\nimport CourseSummary from \"./CourseSummary\";\nimport { Link } from \"react-router-dom\";\n//\n// Purpose is to list ALL courses on homepage\n//\n\nconst AllCourses = ({ courses }) => {\n  return (\n    <div className=\"all-courses section\">\n      <h5 className=\"card-title\">All Courses</h5>\n      {courses &&\n        courses.map(course => {\n          return (\n            <Link to={\"/course/\" + course.id} key={course.id}>\n              <CourseSummary course={course} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default AllCourses;\n","import React, { Component } from \"react\";\nimport CourseList from \"../courseInformation/SignedIn/CourseList\";\nimport AllCourses from \"../courseInformation/SignedIn/AllCourses\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nclass Dashboard extends Component {\n  render() {\n    // get courses from props\n    const { courses } = this.props;\n    console.log(courses);\n    return (\n      <div className=\"dashboard container\">\n        {/* this div ensures our two main boxes are alligned in a row */}\n        <div className=\"row\">\n          {/* this div is for current courses */}\n          <div className=\"col s12 m5 card-panel white\">\n            {/* this passes courses data from dashboard to course list component */}\n            <AllCourses courses={courses} />\n            {/* <AllCourses /> */}\n          </div>\n          {/* this div is for all other courses and assignments */}\n          <div className=\"col s12 m6 offset-m1 card-panel white\">\n            <CourseList courses={courses} />{\" \"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    // grab from firestore state property instead of dummy data\n    courses: state.firestore.ordered.courses\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  // when this component is active (dashboard) we want to listen to courses collection\n  firestoreConnect([{ collection: \"courses\" }])\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createAssignment } from \"../../store/actions/courseActions\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nclass NewAssignment extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    courseId: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n      // courseId: course.title\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createAssignment(this.state);\n  };\n\n  render() {\n    // console.log(this.state);\n    const { courses, course } = this.props;\n    // const id = this.props.match.params.id;\n    // console.log(\"id\", id);\n    console.log(\"course\", course);\n    console.log(\"here\");\n    console.log(\"props\", this.props);\n    console.log(course.title);\n    this.state.courseTitle = course.title;\n    console.log(this.state.courseTitle);\n    console.log(\"here\");\n    // courseId = course.title;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Add New Assignment</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"description\">Assignment Description</label>\n            <textarea\n              id=\"description\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn black lighten-1 z-depth-0\">Add</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(NewAssignment);\n\n// const mapStateToProps = state => {\n//   console.log(\"Courses:\" + state.firestore.ordered.courses);\n//   return {\n//     // grab from firestore state property instead of dummy data\n//     courses: state.firestore.ordered.courses\n//   };\n// };\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createAssignment: assignment => dispatch(createAssignment(assignment))\n  };\n};\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(NewAssignment);\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  // when this component is active (dashboard) we want to listen to courses collection\n  firestoreConnect([{ collection: \"courses\" }])\n)(NewAssignment);\n","export const createCourse = course => {\n  // dispatch dispatches an action to the reducer, and getState is there in case we need it\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database (it was paused to ensure its async)\n    const firestore = getFirestore();\n    // const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore\n      .collection(\"courses\")\n      .add({\n        // this gets properties passed in from project (title, content, professor, description, assignments)\n        ...course,\n        createdAt: new Date(),\n        rating: 4,\n        authorId: authorId,\n        assignments: [\n          {\n            title: \"Read Syllabus\",\n            description: \"Read the the entirity of the syllabus\"\n          },\n          {\n            title: \"Chapter 1 textbook problems\",\n            description: \"Read chapter 1 of textbook and do the problems\"\n          }\n        ]\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_COURSE\", course: course });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_COURSE_ERROR\", err });\n      });\n  };\n};\n\nexport const createAssignment = (assignment, userId) => {\n  // dispatch dispatches an action to the reducer, and getState is there in case we need it\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const firebase = getFirebase();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    const courses = getState().firestore.data.courses;\n    console.log(courses.P0n8lnKrSoqdThDAdYBk);\n\n    // {\n    //   courses &&\n    //     courses.map(course => {\n    //       // return (\n    //       //   // output some jsx for each individual course\n    //       //   <Link to={\"/course/\" + course.id} key={course.id}>\n    //       //     <CourseSummary course={course} />\n    //       //   </Link>\n    //       // );\n    //       console.log(course.id);\n    //     });\n    // }\n    //console.log(courses);\n    //console.log(authorId);\n    console.log(assignment);\n    console.log(\"state\", getState());\n    // make async call to database (it was paused to ensure its async)\n    dispatch({\n      type: \"CREATE_ASSIGNMENT\",\n      assignment: assignment,\n      state: getState()\n    });\n  };\n};\n// .database().ref('users/' + userId).set({\n//   username: name,\n//   email: email,\n//   profile_picture : imageUrl\n// });\n\n//     firestore\n//       .collection(\"courses\").ref('')\n//       .push({\n//         // this gets properties passed in from project (title, content, professor, description, assignments)\n//         ...course,\n//         assignments: [\n//           {\n//             title: \"Read Syllabus\",\n//             description: \"Read the the entirity of the syllabus\"\n//           },\n//           {\n//             title: \"Chapter 1 textbook problems\",\n//             description: \"Read chapter 1 of textbook and do the problems\"\n//           },\n//           assignment\n//         ]\n//       })\n//       .then(() => {\n//         dispatch({ type: \"CREATE_ASSIGNMENT\", course: course });\n//       })\n//   };\n// };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport NewAssignment from \"../../assignments/NewAssignment\";\nimport moment from \"moment\";\n\n//\n// Purpose is to show course details when a course is clicked on\n//\n\nconst CourseDetails = props => {\n  const { course, auth } = props;\n  if (course) {\n    // console.log(props.location.state.key);\n    const list = course.assignments;\n    const titles = list.map(i => <li key={i.title}>{i.title}</li>);\n    if (auth.uid) {\n      return (\n        <div>\n          <div className=\"container section course-details\">\n            <div className=\"card z-depth\">\n              <div className=\"card-content\">\n                {/* we use curly braces for id because it is dynamic */}\n                <span className=\"card-title\">{course.title}</span>\n                <h6>Course GPA: {course.rating} </h6>\n                <div className=\"grey-text\">\n                  Instructor: {course.professor}\n                  <p className=\"grey-text\">\n                    Year Enrolled:{\" \"}\n                    {moment(course.createdAt.toDate()).format(\"YYYY\")}\n                  </p>\n                </div>\n                <p>{course.description}</p>\n              </div>\n              <div className=\"card-action grey lighten-4 grey-text\">\n                {/* <div>Posted by the Net Ninja</div>\n              <div>2nd September, 2am</div> */}\n                <h6 className=\"text center\">Assignments</h6>\n                <div>{titles}</div>\n                <div>\n                  {/* <Link to={\"/addassignment/\" + course.id} key={course.id}>\n                  Add assignment\n                </Link> */}\n                  <NewAssignment course={course} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"container section course-details\">\n            <div className=\"card z-depth\">\n              <div className=\"card-content\">\n                {/* we use curly braces for id because it is dynamic */}\n                <span className=\"card-title\">{course.title}</span>\n                <h6>Course GPA: {course.rating} </h6>\n                <p className=\"grey-text\">{course.professor}</p>\n                <p>{course.description}</p>\n              </div>\n              <div className=\"card-action grey lighten-4 grey-text\">\n                {/* <div>Posted by the Net Ninja</div>\n              <div>2nd September, 2am</div> */}\n                <h6 className=\"text center\">Assignments</h6>\n                <div>{titles}</div>\n                <p>\n                  {/* <Link to={\"/addassignment/\" + course.id} key={course.id}>\n                  Add assignment\n                </Link> */}\n                  {/* <NewAssignment course={course} /> */}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading course...</p>\n      </div>\n    );\n  }\n};\n\n// becuase we just want to provide info about one course here\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  console.log(\"id\", id);\n  const courses = state.firestore.data.courses;\n  const course = courses ? courses[id] : null;\n  console.log(\"course\", course);\n  return {\n    course: course,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"courses\" }])\n)(CourseDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/dashboard\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn black lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// for our purposes, we can use once the dispatch is done and authError is maybe changed\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/dashboard\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn black lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p> {authError} </p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createCourse } from \"../../../store/actions/courseActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass NewCourse extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n    description: \"\",\n    professor: \"\",\n    rating: \"\",\n    assignments: [\n      {\n        title: \"\",\n        description: \"\"\n      }\n    ]\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createCourse(this.state);\n    this.props.history.push(\"/dashboard\");\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/dashboard\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Add New Course</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">\n              Department Abbreviation and Course Number (Ex: COMPSCI 506)\n            </label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Course Name</label>\n            <input\n              type=\"text\"\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"professor\">Professor Name</label>\n            <input\n              type=\"text\"\n              id=\"professor\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"description\">Course Description</label>\n            <textarea\n              id=\"description\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn black lighten-1 z-depth-0\">Add</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCourse: course => dispatch(createCourse(course))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewCourse);\n","import React, { Component } from \"react\";\nimport AllCourses from \"../courseInformation/SignedIn/AllCourses\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nclass SignedOutDashboard extends Component {\n  render() {\n    // return some jsx\n    // get courses from props\n    const { courses } = this.props;\n    // if (!uth.uid) return <Redirect to=\"/dashboard\" />;\n    return (\n      <div className=\"dashboard container\">\n        {/* this div ensures our two main boxes are alligned in a row */}\n        <div className=\"row\">\n          {/* this div is for all other courses and assignments */}\n          <div className=\"col s10 push-s1 pull-s1 card-panel white center\">\n            <AllCourses courses={courses} />{\" \"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// map state to props\nconst mapStateToProps = state => {\n  // object returned represents which properties are attatched to the proponents so we can access them in there\n  return {\n    // we are referencing the courses property from root reducer -> courses reducer\n    courses: state.firestore.ordered.courses\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  // when this component is active (dashboard) we want to listen to courses collection\n  firestoreConnect([{ collection: \"courses\" }])\n)(SignedOutDashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n// import NewAssignment from \"../../assignments/NewAssignment\";\n\n//\n// Purpose is to show course details when a course is clicked on\n//\n\nconst CourseDetails = props => {\n  const { course } = props;\n  console.log(course);\n  if (course) {\n    const list = course.assignments;\n    const titles = list.map(i => <li key={i.title}>{i.title}</li>);\n    return (\n      <div>\n        <div className=\"container section course-details\">\n          <div className=\"card z-depth\">\n            <div className=\"card-content\">\n              {/* we use curly braces for id because it is dynamic */}\n              <span className=\"card-title\">{course.title}</span>\n              <h6>Course GPA: {course.rating} </h6>\n              <p className=\"grey-text\">{course.professor}</p>\n              <p>{course.description}</p>\n            </div>\n            <div className=\"card-action grey lighten-4 grey-text\">\n              {/* <div>Posted by the Net Ninja</div>\n              <div>2nd September, 2am</div> */}\n              <h6 className=\"text center\">Assignments</h6>\n              <div>{titles}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading course...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const courses = state.firestore.data.courses;\n  const course = courses ? courses[id] : null;\n  return {\n    course: course\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"courses\" }])\n)(CourseDetails);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport CourseDetails from \"./components/courseInformation/SignedIn/CourseDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport NewAssignment from \"./components/assignments/NewAssignment\";\nimport NewCourse from \"./components/courseInformation/SignedIn/NewCourse\";\nimport SignedOutDashboard from \"./components/dashboard/SignedOutDashboard\";\nimport SignedOutCourseDetails from \"./components/courseInformation/SignedOut/SignedOutCourseDetails\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            {/* // when a user goes to forward slash, load the dashboard component here inside the app component */}\n            <Route exact path=\"/\" component={SignedOutDashboard} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/course/:id\" component={CourseDetails} />\n            <Route\n              path=\"/courseDetails/:id\"\n              component={SignedOutCourseDetails}\n            />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/addassignment/:id\" component={NewAssignment} />\n            <Route path=\"/addcourse\" component={NewCourse} />\n            {/* <Route path=\"/signedoutdashboard\" component={SignedOutDashboard} /> */}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  courses: [\n    {\n      id: \"1\",\n      title: \"COMPSCI 508\",\n      content: \"Software Engineering\",\n      description: \"Working in teams to build software\",\n      professor: \"Tracy Lewis Williams\"\n    },\n    {\n      id: \"2\",\n      title: \"COMPSCI 638\",\n      content: \"Data Science\",\n      description: \"Predicting things with data\",\n      professor: \"John Smith\"\n    },\n    {\n      id: \"3\",\n      title: \"MATH 222\",\n      content: \"Intermediate Calculus\",\n      description: \"Derivatives and Integrals\",\n      professor: \"Andrew Bascom\"\n    },\n    {\n      id: \"4\",\n      title: \"MATH 340\",\n      content: \"Linear Algebra\",\n      description:\n        \"Math concerning linear equations, matrices, and vector spaces\",\n      professor: \"OJ Juice\"\n    }\n  ]\n};\n// when we don't have a state, it uses initState value\nconst courseReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_COURSE\":\n      console.log(\"created course\", action.course);\n      return state;\n    case \"CREATE_COURSE_ERROR\":\n      console.log(\"create course error\", action.err);\n      return state;\n    case \"CREATE_ASSIGNMENT\":\n      var i;\n      var correctClass;\n      var correctClassIndex;\n      for (i = 0; i < state.courses.length - 1; i++) {\n        // find correct course to add assignment to\n        if (state.courses[i].title === action.assignment.courseTitle) {\n          // console.log(state.courses[i].title);\n          correctClass = state.courses[i].title;\n          correctClassIndex = i;\n          console.log(correctClass);\n          break;\n          // found class, now want to add this assignment to that class's document\n        }\n      }\n      console.log(\"created assignment\", action.assignment);\n      // found class, now want to add this assignment to that class's document (rather than return state)\n      console.log(\"state\", state);\n      // state.courses[correctClassIndex].assignments.add(action.assignment);\n      return state;\n    // return {\n    //   ...state,\n    //   assignments: state.assignments.concat(action.assignment)\n    // };\n    // return initialState.push(action.portfolio);\n    default:\n      return state;\n  }\n};\n\nexport default courseReducer;\n","import authReducer from \"./authReducer\";\nimport courseReducer from \"./courseReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  course: courseReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n\n// the key name will be the data property on the state object\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyC_-xnkHrSKNIVdl6tlBf4OptRvKyLcUGI\",\n  authDomain: \"spike-7d83e.firebaseapp.com\",\n  databaseURL: \"https://spike-7d83e.firebaseio.com\",\n  projectId: \"spike-7d83e\",\n  storageBucket: \"spike-7d83e.appspot.com\",\n  messagingSenderId: \"1066432182050\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\n// creates a store and stores it in store\n// will combine multiple reducers and pass it in here\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    }), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}